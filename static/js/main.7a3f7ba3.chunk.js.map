{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_LENGTH","SORT_REVERSE","App","useState","sortField","setSortField","visibleGoods","goods","preparedGoods","length","forEach","elem","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","cn","indexOf","onClick","filter","toString","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,sBACtBC,EAAc,iBACdC,EAAe,UA4Bd,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAA0BC,EAA1B,GAAiD,IAAdH,EAAa,EAAbA,UAC3BI,EAAa,YAAOD,GAsB1B,OApBIH,EAAUK,OAAS,GACrBL,EAAUM,SAAQ,SAACC,GACjB,OAAQA,GACN,KAAKZ,EAEH,OAAOS,EACJI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAChD,KAAKd,EAEH,OAAOQ,EACJI,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMJ,OAASK,EAAML,UACjD,KAAKR,EAEH,OAAOO,EAAcQ,UACvB,QACE,OAAOR,MAKRA,EAKcS,CAAiBnB,EAAiB,CAAEM,cAEzD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,YAAwD,IAA5ChB,EAAUiB,QAAQtB,KAEhCuB,QAAS,kBAC8B,IAArClB,EAAUiB,QAAQpB,GACdI,EAAa,CAACN,EAAqBE,IACnCI,EAAa,CAACN,KARtB,iCAcA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAgD,IAApChB,EAAUiB,QAAQrB,KAEhCsB,QAAS,kBAC8B,IAArClB,EAAUiB,QAAQpB,GACdI,EAAa,CAACL,EAAaC,IAC3BI,EAAa,CAACL,KARtB,4BAcA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAiD,IAArChB,EAAUiB,QAAQpB,KAEhCqB,QAAS,kBAC8B,IAArClB,EAAUiB,QAAQpB,GACdI,EAAa,GAAD,mBAAKD,GAAL,CAAgBH,KAC5BI,EACA,YAAID,GAAWmB,QAAO,SAAAZ,GAAI,OAAIA,IAASV,OAT/C,qBAiBGK,EAAakB,aAAe1B,EAAgB0B,YAC3C,wBACEL,KAAK,SACLD,UAAU,4BACVI,QAAS,kBACPjB,EAAa,KAJjB,sBAaN,6BACIC,EAAamB,KAAI,SAACC,EAAMC,GAAP,OACjB,oBAAI,UAAQ,OAAZ,SAA+BD,GAAPA,YClHlCE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7a3f7ba3.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'Sort alphabetically';\nconst SORT_LENGTH = 'Sort by length';\nconst SORT_REVERSE = 'Reverse';\n\nfunction getPreparedGoods(goods, { sortField }) {\n  const preparedGoods = [...goods];\n\n  if (sortField.length > 0) {\n    sortField.forEach((elem) => {\n      switch (elem) {\n        case SORT_ALPHABETICALLY:\n\n          return preparedGoods\n            .sort((good1, good2) => good1.localeCompare(good2));\n        case SORT_LENGTH:\n\n          return preparedGoods\n            .sort((good1, good2) => good1.length - good2.length);\n        case SORT_REVERSE:\n\n          return preparedGoods.reverse();\n        default:\n          return preparedGoods;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState([]);\n  const visibleGoods = getPreparedGoods(goodsFromServer, { sortField });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField.indexOf(SORT_ALPHABETICALLY) === -1,\n          })}\n          onClick={() => (\n            sortField.indexOf(SORT_REVERSE) !== -1\n              ? setSortField([SORT_ALPHABETICALLY, SORT_REVERSE])\n              : setSortField([SORT_ALPHABETICALLY])\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField.indexOf(SORT_LENGTH) === -1,\n          })}\n          onClick={() => (\n            sortField.indexOf(SORT_REVERSE) !== -1\n              ? setSortField([SORT_LENGTH, SORT_REVERSE])\n              : setSortField([SORT_LENGTH])\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': sortField.indexOf(SORT_REVERSE) === -1,\n          })}\n          onClick={() => (\n            sortField.indexOf(SORT_REVERSE) === -1\n              ? setSortField([...sortField, SORT_REVERSE])\n              : setSortField(\n                [...sortField].filter(elem => elem !== SORT_REVERSE),\n              )\n          )}\n        >\n          Reverse\n        </button>\n\n        {\n          (visibleGoods.toString() !== goodsFromServer.toString()) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => (\n                setSortField([])\n              )}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        { visibleGoods.map((good, index) => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}